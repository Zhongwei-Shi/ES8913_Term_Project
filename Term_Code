#The code was auto generated by R commander.
#(Load Data)
Dataset <- readXL("/Users/trythismac/Documents/MS8111/Experimental.xlsx", rownames=FALSE, 
  header=TRUE, na="", sheet="version1", stringsAsFactors=TRUE)

#(Numeric Summary by Field groups)
library(abind, pos=17)
library(e1071, pos=18)
numSummary(Dataset[,c("B.AH", "B.AP", "B.BP", "X45.F.AH", "X45.F.AP", "X45.N.AH", "X45.N.AP", 
  "X118.F.AH", "X118.F.AP", "X118.N.AH", "X118.N.AP", "X131.F.AH", "X131.F.AP", "X131.N.AH", 
  "X131.N.AP"), drop=FALSE], groups=Dataset$Field, statistics=c("mean", "sd", "IQR", 
  "quantiles"), quantiles=c(0,.25,.5,.75,1))

#(Visualizations)
par(mfrow=c(1,3))
Boxplot(B.BP~Field, data=Dataset, id=list(method="y"))
Boxplot(B.AP~Field, data=Dataset, id=list(method="y"))
Boxplot(B.AH~Field, data=Dataset, id=list(method="y"))
par(mfrow=c(3,4))
Boxplot(X45.N.AP~Field, data=Dataset, id=list(method="y"))
Boxplot(X45.F.AP~Field, data=Dataset, id=list(method="y"))
Boxplot(X45.N.AH~Field, data=Dataset, id=list(method="y"))
Boxplot(X45.F.AH~Field, data=Dataset, id=list(method="y"))
Boxplot(X118.N.AP~Field, data=Dataset, id=list(method="y"))
Boxplot(X118.F.AP~Field, data=Dataset, id=list(method="y"))
Boxplot(X118.N.AH~Field, data=Dataset, id=list(method="y"))
Boxplot(X118.F.AH~Field, data=Dataset, id=list(method="y"))
Boxplot(X131.N.AP~Field, data=Dataset, id=list(method="y"))
Boxplot(X131.F.AP~Field, data=Dataset, id=list(method="y"))
Boxplot(X131.N.AH~Field, data=Dataset, id=list(method="y"))
Boxplot(X131.F.AH~Field, data=Dataset, id=list(method="y"))

#(Test of Assumptions)
normalityTest(B.BP ~ Field, test="shapiro.test", data=Dataset)
normalityTest(B.BP ~ Field, test="pearson.test", data=Dataset)
Tapply(B.BP ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(B.BP ~ Field, data=Dataset, center="median")
normalityTest(B.AH ~ Field, test="shapiro.test", data=Dataset)
normalityTest(B.AH ~ Field, test="pearson.test", data=Dataset)
Tapply(B.AH ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(B.AH ~ Field, data=Dataset, center="median")
normalityTest(B.AP ~ Field, test="shapiro.test", data=Dataset)
normalityTest(B.AP ~ Field, test="pearson.test", data=Dataset)
Tapply(B.AP ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(B.AP ~ Field, data=Dataset, center="median")
normalityTest(X45.F.AH ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X45.F.AH ~ Field, test="pearson.test", data=Dataset)
Tapply(X45.F.AH ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X45.F.AH ~ Field, data=Dataset, center="median")
normalityTest(X45.F.AP ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X45.F.AP ~ Field, test="pearson.test", data=Dataset)
Tapply(X45.F.AP ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X45.F.AP ~ Field, data=Dataset, center="median")
normalityTest(X45.N.AH ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X45.N.AH ~ Field, test="pearson.test", data=Dataset)
Tapply(X45.N.AH ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X45.N.AH ~ Field, data=Dataset, center="median")
normalityTest(X45.N.AP ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X45.N.AP ~ Field, test="pearson.test", data=Dataset)
Tapply(X45.N.AP ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X45.N.AP ~ Field, data=Dataset, center="median")
normalityTest(X118.F.AH ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X118.F.AH ~ Field, test="pearson.test", data=Dataset)
Tapply(X118.F.AH ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X118.F.AH ~ Field, data=Dataset, center="median")
normalityTest(X118.F.AP ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X118.F.AP ~ Field, test="pearson.test", data=Dataset)
Tapply(X118.F.AP ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X118.F.AP ~ Field, data=Dataset, center="median")
normalityTest(X118.N.AH ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X118.N.AH ~ Field, test="pearson.test", data=Dataset)
Tapply(X118.N.AH ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X118.N.AH ~ Field, data=Dataset, center="median")
normalityTest(X118.N.AP ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X118.N.AP ~ Field, test="pearson.test", data=Dataset)
Tapply(X118.N.AP ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X118.N.AP ~ Field, data=Dataset, center="median")
normalityTest(X131.F.AH ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X131.F.AH ~ Field, test="pearson.test", data=Dataset)
Tapply(X131.F.AH ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X131.F.AH ~ Field, data=Dataset, center="median")
normalityTest(X131.F.AP ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X131.F.AP ~ Field, test="pearson.test", data=Dataset)
Tapply(X131.F.AP ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X131.F.AP ~ Field, data=Dataset, center="median")
normalityTest(X131.N.AH ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X131.N.AH ~ Field, test="pearson.test", data=Dataset)
Tapply(X131.N.AH ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X131.N.AH ~ Field, data=Dataset, center="median")
normalityTest(X131.N.AP ~ Field, test="shapiro.test", data=Dataset)
normalityTest(X131.N.AP ~ Field, test="pearson.test", data=Dataset)
Tapply(X131.N.AP ~ Field, var, na.action=na.omit, data=Dataset) # variances by group
leveneTest(X131.N.AP ~ Field, data=Dataset, center="median")

#(Two-way ANOVA, Field~Depth on Each Hybrid)
AnovaModel.16 <- lm(B.AH ~ Depth*Field, data=Dataset, contrasts=list(Depth ="contr.Sum", 
  Field ="contr.Sum"))
Anova(AnovaModel.16)
Tapply(B.AH ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(B.AH ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.17 <- lm(B.AP ~ Depth*Field, data=Dataset, contrasts=list(Depth ="contr.Sum", 
  Field ="contr.Sum"))
Anova(AnovaModel.17)
Tapply(B.AP ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(B.AP ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.18 <- lm(B.BP ~ Depth*Field, data=Dataset, contrasts=list(Depth ="contr.Sum", 
  Field ="contr.Sum"))
Anova(AnovaModel.18)
Tapply(B.BP ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(B.BP ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.19 <- lm(X45.F.AH ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.19)
Tapply(X45.F.AH ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X45.F.AH ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.20 <- lm(X45.F.AP ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.20)
Tapply(X45.F.AP ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X45.F.AP ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.21 <- lm(X45.N.AH ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.21)
Tapply(X45.N.AH ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X45.N.AH ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.22 <- lm(X45.N.AP ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.22)
Tapply(X45.N.AP ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X45.N.AP ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.23 <- lm(X118.F.AH ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.23)
Tapply(X118.F.AH ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X118.F.AH ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.24 <- lm(X118.F.AP ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.24)
Tapply(X118.F.AP ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X118.F.AP ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.25 <- lm(X118.N.AH ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.25)
Tapply(X118.N.AH ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X118.N.AH ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.26 <- lm(X118.N.AP ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.26)
Tapply(X118.N.AP ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X118.N.AP ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.27 <- lm(X131.F.AH ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.27)
Tapply(X131.F.AH ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X131.F.AH ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.28 <- lm(X131.F.AP ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.28)
Tapply(X131.F.AP ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X131.F.AP ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.29 <- lm(X131.N.AH ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.29)
Tapply(X131.N.AH ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X131.N.AH ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts
AnovaModel.30 <- lm(X131.N.AP ~ Depth*Field, data=Dataset, contrasts=list(Depth 
  ="contr.Sum", Field ="contr.Sum"))
Anova(AnovaModel.30)
Tapply(X131.N.AP ~ Depth + Field, mean, na.action=na.omit, data=Dataset) # means
Tapply(X131.N.AP ~ Depth + Field, sd, na.action=na.omit, data=Dataset) # std. deviations
xtabs(~ Depth + Field, data=Dataset) # counts

#(Four-way ANOVA, Field~Fertilizer~Hybrid~Period, dataset was rearranged for table)

Dataset <- readXL("/Users/trythismac/Documents/MS8111/Experimental.xlsx", rownames=FALSE, 
  header=TRUE, na="", sheet="Simcoe", stringsAsFactors=TRUE)
AnovaModel.1 <- lm(X45.N.AP ~ Fertilizer*Field*Hybrid*Period, data=Dataset, 
  contrasts=list(Fertilizer ="contr.Sum", Field ="contr.Sum", Hybrid ="contr.Sum", Period 
  ="contr.Sum"))
Anova(AnovaModel.1)
Tapply(X45.N.AP ~ Fertilizer + Field + Hybrid + Period, mean, na.action=na.omit, 
  data=Dataset) # means
Tapply(X45.N.AP ~ Fertilizer + Field + Hybrid + Period, sd, na.action=na.omit, 
  data=Dataset) # std. deviations
xtabs(~ Fertilizer + Field + Hybrid + Period, data=Dataset) # counts
